<?xml version="1.0" encoding="utf-8"?>
<baseclass:ViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:baseclass="sm.wegis.szy.core.baseclass.*" 
					xmlns:ns="library://ns.supermap.com/flex/wegis/common"
					xmlns:supermap="http://www.supermap.com/iclient/2010"
					xmlns:basemap="widgets.basemap.*"
					width="100%" height="100%"
					creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:Resize id="hideEffect" duration="200" widthFrom="300" widthTo="0" target="{BodyContainerID}" repeatCount="1"/>
		<s:Resize id="showEffect" duration="200" widthFrom="0" widthTo="300" target="{BodyContainerID}" repeatCount="1"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.supermap.wegis.common.components.events.MenuEventEx;
			import com.supermap.wegis.common.components.menuBar.MenuItem;
			import com.supermap.wegis.common.core.resourceManager.ResourceManagerEx;
			import com.supermap.wegis.common.core.widget.WidgetManager;
			
			import mx.collections.ArrayCollection;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			
			import sm.wegis.szy.core.utils.MapCtrlTool;
			import sm.wegis.szy.events.MapLayerEvent;
			import sm.wegis.szy.events.MenuItemEvent;
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.skins.MenuItemSkinEx;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				initListener();
			}
			
			public function initMehthod():void 
			{ 
				//初始化加载的widget 
				CairngormEventDispatcher.getInstance().addEventListener(SystemEvent.INITIAL_WIDGET 
					,addInitialWidget); 
				//根据菜单选择切换主体面板内容 
				CairngormEventDispatcher.getInstance().addEventListener(MenuItemEvent.SYSTEM_MENU_SELECT_CHANGE 
					,switchBodyContent); 
			} 
			
			/**初始化视图事件监听*/
			public function initListener():void
			{
				//系统菜单
				this.systemMenuId.addEventListener(MenuEventEx.MENU_CLICK, systemMenuHandler);
				
				//控制左侧面板显示隐藏
				this.ControlBodyControlID.addEventListener(MouseEvent.MOUSE_DOWN, controlBodyHandler);
				
				//底图切换
				CairngormEventDispatcher.getInstance().addEventListener(MapLayerEvent.BASE_MAP_CHANGE, basemapChangeHandler);
			}
			
			private function basemapChangeHandler(e:MapLayerEvent):void
			{
				var data:Object = e.data;
				if(data != null)
				{
					if(data.hasOwnProperty("baseMapState"))
					{
						var current:String = data["baseMapState"];
						if(current == "vectorMapState")
						{
							this.CopyRightID.styleName = "verctorCopyRightStyle";
						}
						else
						{
							this.CopyRightID.styleName = "imageCopyRightStyle";
						}
					}
				}
			}
			
			//控制左侧面板显示隐藏
			private function controlBodyHandler(e:MouseEvent):void
			{
				this.showEffect.stop();
				this.hideEffect.stop();
				var tempWidth:Number = this.BodyContainerID.width;
				if(tempWidth == 0)
				{
					this.showEffect.play();
					this.ControlBodyControlID.source = ResourceManagerEx.FindResource("Left").cls;
				}
				else
				{
					this.hideEffect.play();
					this.ControlBodyControlID.source = ResourceManagerEx.FindResource("Right").cls;
				}
			}
			
			//系统一级菜单响应
			private function systemMenuHandler(e:MenuEventEx):void
			{
				if(e.Message is MenuItem)
				{
					var item:MenuItem = e.Message as MenuItem;
					var menuEvent:MenuItemEvent = new MenuItemEvent(MenuItemEvent.SYSTEM_MENU_SELECT_CHANGE);
					if(item != null)
					{
						menuEvent.data = item.data;
						menuEvent.dispatch();
					}
				}
			}
			
			//加载初始化widget
			private function addInitialWidget(event:SystemEvent):void
			{
				var initWidgetConfig:Object = event.data;
				if(initWidgetConfig == null)
				{
					return;
				}
				if(initWidgetConfig is ArrayCollection || initWidgetConfig is Array)
				{
					for each(var obj:Object in initWidgetConfig)
					{
						obj.parent = MainBodyContainerID;
					}
				}
				else if(initWidgetConfig is Object)
				{
					initWidgetConfig.parent = MainBodyContainerID;
				}
				WidgetManager.getInstance().loadWidget(initWidgetConfig);
			}
			
			
			//切换主体模块内容
			private function switchBodyContent(event:MenuItemEvent):void
			{
				var menuItemData:Object = event.data;
				if(menuItemData == null) {
					return;
				}
				
				this.BodyContainerID.removeAllElements();
				menuItemData.parent = this.BodyContainerID;
				WidgetManager.getInstance().loadWidget(menuItemData);
			}
			
			/*****添加二维地图控件******************************************************/
			public function addMapCtrl(component:IVisualElement):void
			{
				this.MapContainerID.addElement(component);
				
				this.initMapControl();
			}
			
			/**控件初始化，调用控件实例时，必须先调用该方法*/
			public function initMapControl():void
			{
				if(modelLocator.mapCtrl != null)
				{
					var mapCtrlTool:MapCtrlTool = new MapCtrlTool();
					mapCtrlTool.initMapCompass(this.MainBodyContainerID);
				}
			}
			
			protected function userLoginId_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.loginPanelId.visible = true;
				this.loginPanelId.includeInLayout = true;
			}
			
			protected function closeLoginId_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.loginPanelId.visible = false;
				this.loginPanelId.includeInLayout = false;
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="0">
		<s:BorderContainer id="TopContainerID"  width="100%" height="60">
			<s:HGroup width="100%" height="100%" paddingLeft="0" verticalAlign="middle" gap="0">
				<s:Rect  width="40" height="40">
					<s:fill>
						<s:BitmapFill source="{ResourceManagerEx.FindResource('logoIcon').cls}" fillMode="clip"/> 
					</s:fill>
				</s:Rect>
				<s:Rect width="345" height="45">
					<s:fill>
						<s:BitmapFill source="{ResourceManagerEx.FindResource('titleIcon').cls}" fillMode="clip"/> 
					</s:fill>
				</s:Rect>
				<s:Spacer width="100%"/>
				<s:VGroup horizontalAlign="right" paddingRight="5">
					<s:HGroup verticalAlign="middle" horizontalAlign="right" gap="0">
						<s:Label id="userInfoId" text="" height="100%" verticalAlign="middle" buttonMode="true"/>
						<s:Button id="userLoginId" 
								  label="登录" 
								  width="40" height="100%" 
								  skinClass="sm.wegis.szy.skins.LoginButtonSkin" 
								  buttonMode="true"
								  click="userLoginId_clickHandler(event)"/>
					</s:HGroup>
					<s:Spacer height="100%"/>
					<ns:MenuBar id="systemMenuId" 
								height="100%"
								styleName="menuStyle"
								menuItemSkinClass="{MenuItemSkinEx}"
								isUpdateStatus="true"
								itemHorizontalGap="0" itemVerticalGap="4" 
								itemHeight="30" itemWidth="70"
								itemRowCount="1"
								isToolTip="false"
								dataProvider="{modelLocator.menuInfo.mapMenuList}"
								labelField="{modelLocator.menuInfo.mapMenuLabel}"/>
				</s:VGroup>
			</s:HGroup>
			<s:SWFLoader width="100%" height="100%" source="assets/swf/bubble.swf"/>
		</s:BorderContainer>
		<s:Rect width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#B5B9C0"/>
			</s:fill>
		</s:Rect>
		<s:HGroup id="BottomContainerID" width="100%" height="100%" paddingTop="0" paddingBottom="0" gap="0">
			<s:BorderContainer id="BodyContainerID"  width="300" height="100%">
				
			</s:BorderContainer>
			<s:Group id="MainBodyContainerID"  width="100%" height="100%">
				<s:BorderContainer id="MapContainerID" width="100%" height="100%">
				</s:BorderContainer>
				<s:HGroup left="0" top="0" height="100%" verticalAlign="middle" horizontalAlign="left" gap="0">
					<s:Rect width="1" height="100%">
						<s:fill>
							<s:SolidColor color="#B5B9C0"/>
						</s:fill>
					</s:Rect>
					<s:BorderContainer width="15" height="60" backgroundAlpha="0.9">
						<s:Image id="ControlBodyControlID"
								 source="{ResourceManagerEx.FindResource('Left').cls}"
								 buttonMode="true"/>
					</s:BorderContainer>
				</s:HGroup>
				<s:BorderContainer height="30" right="5" top="5" borderVisible="true">
					<ns:ToolBar id="MapTool" height="100%"
								buttonStyleName="toolStyle"
								dataProvider="{modelLocator.toolInfo.mapToolList}"
								labelField="{modelLocator.toolInfo.mapToolLabel}"/>
				</s:BorderContainer>
				<s:HGroup id="CopyRightID" 
						  width="100%"
						  gap="0"
						  left="3"
						  bottom="3"
						  horizontalAlign="left" 
						  verticalAlign="middle">
					<s:Label fontFamily="Times New Roman" text="©"/>
					<s:Label text="{modelLocator.systemInfo.copyRight}"/>
				</s:HGroup>
			</s:Group> 
		</s:HGroup>
	</s:VGroup>
	
	<s:BorderContainer id="loginPanelId" 
					   visible="false" includeInLayout="true"
					   width="100%" height="100%"
					   backgroundColor="#D9D9D9" backgroundAlpha="0.6">
		<s:VGroup width="100%" height="100%" 
				  horizontalAlign="center"
				  verticalAlign="middle">
			<s:BorderContainer>
				<s:VGroup width="400"
						  paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
						  horizontalAlign="center"
						  verticalAlign="middle" 
						  gap="10">
					<s:HGroup width="100%" height="30" verticalAlign="middle" paddingLeft="10" paddingRight="10">
						<s:Label text="登录系统账号" width="100%" styleName="LoginLabelStyle"/>
						<s:Spacer width="100%"/>
						<s:Button id="closeLoginId" styleName="CloseLoginButtonStyle" buttonMode="true"
								  click="closeLoginId_clickHandler(event)"/>
					</s:HGroup>
					<s:Line width="100%">
						<s:stroke>
							<s:SolidColorStroke color="#ABDBFC" weight="1"/>
						</s:stroke>
					</s:Line>
					<s:TextInput id="UserIdName" width="355" height="30"
								 prompt="用户名" styleName="UserIdStyle"/>
					<s:TextInput id="PwdValue" width="355" height="30" displayAsPassword="true"
								 prompt="密码" styleName="PasswordStyle"/>
					<s:HGroup width="355" horizontalAlign="right">
						<s:Button id="SubmitBtn" width="60" height="30" label="登录"
								  buttonMode="true" styleName="SubmitRegisterStyle"/>
					</s:HGroup>
					<s:Label id="LoginInfoLabel" width="355" styleName="SubmitRegisterInfo"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:VGroup>
	</s:BorderContainer>
</baseclass:ViewBase>
