<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 minWidth="160" minHeight="60" 
		 xmlns:ns="library://ns.supermap.com/flex/wegis/common">
	<fx:Script>
		<![CDATA[
			import com.supermap.web.core.Feature;
			import com.supermap.web.core.styles.InfoStyle;
			import com.supermap.wegis.common.mappingEx.FeaturesLayerEx;
			
			import mx.collections.ArrayCollection;
			
			import sm.wegis.szy.renders.items.BreakGridRow;
			import sm.wegis.szy.renders.items.RiverGridRow;
			
			private var _targets:Object;
			private var _title:String;
			public var type:String;
			public var targetLayer:FeaturesLayerEx=null;
			public var dmID:String="";
			private var change:Boolean =false;
			
			public static const River:String = "river";
			public static const Break:String = "break";

			public function get title():String
			{
				return _title;
			}

			public function set title(value:String):void
			{
				_title = value;
			}

			public function get targets():Object
			{
				return _targets;
			}

			public function set targets(value:Object):void
			{
				_targets = value;
				change = true;
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				if (change == true){
					change = false;
					if (title != null && title.length > 0) {
						titleLb.text = title;
						titleLb.toolTip = title;
					} else {
						titleContent.visible = titleContent.includeInLayout = false;
					}
				
					var item:Object;
					gridContent.removeAllElements();
					if (type == River) {
						var riverGridRow:RiverGridRow = new RiverGridRow();
						riverGridRow.title =  "污染物名称";
						riverGridRow.value =  "断面超标率";
						riverGridRow.isTitle = true;
						gridContent.addElement(riverGridRow);
						for each(item in targets) {
							riverGridRow = new RiverGridRow();
							riverGridRow.title = item["污染物名称"];
							riverGridRow.value = item["断面超标率"];
							riverGridRow.styleName = "contentGridItem";
							gridContent.addElement(riverGridRow);
						}
					} else {
						var breakGridRow:BreakGridRow = new BreakGridRow();
						breakGridRow.title =  "污染物名称";
						breakGridRow.value =  "观测值";
						breakGridRow.times = "超标倍数";
						breakGridRow.isTitle = true;
						gridContent.addElement(breakGridRow);
						for each(item in targets) {
							breakGridRow = new BreakGridRow();
							breakGridRow.title = item["污染物名称"];
							breakGridRow.value = item["断面超标率"];
							breakGridRow.times =item["超标倍数"];
							breakGridRow.styleName = "contentGridItem";
							gridContent.addElement(breakGridRow);
						}
					}
				}
			}
			
			protected function groupfocusInHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = "focusIn";
			}
			
			protected function groupfocusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = "focusOut";
			}
			
			protected function closeHandler(event:MouseEvent):void
			{
				if(targetLayer != null && dmID != "")
				{
					var fs:ArrayCollection = targetLayer.features as ArrayCollection;
					if(fs.length > 0)
					{
						for(var i:int=0;i<fs.length;i++)
						{
							var f:Feature = fs.getItemAt(i) as Feature;
							if(f.id == dmID)
							{
								targetLayer.removeFeature(f);
								targetLayer.refresh();
								break;
							}
						}
					}
				}
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="focusIn"/>
		<s:State name="focusOut"/>
	</s:states>
	<s:VGroup width="100%" height="100%" gap="3" 
			  focusIn="groupfocusInHandler(event)"
			  focusOut="groupfocusOutHandler(event)">
		<s:Group id="titleContent" width="100%" minHeight="20">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor id="infoStyleBg" 
								  color="0x3385FF" 
								  alpha="0.6" 
								  alpha.focusIn="1" 
								  alpha.focusOut="0.6"/>
				</s:fill>
			</s:Rect>
			<s:Label id="titleLb" color="0xFFFFFF" verticalCenter="0" left="5" width="100%"/>
			<ns:CloseButton id="closeButton" 
								width="25"
								height="20" 
								buttonMode="true" verticalCenter="0" right="0" click="closeHandler(event)">
			</ns:CloseButton>
		</s:Group>
		<mx:Grid id="gridContent"   width="100%" height="100%" 
				 backgroundAlpha="0.6" 
				 backgroundAlpha.focusIn="1" 
				 backgroundAlpha.focusOut="0.6" 
				 styleName="gridStyle"/>
	</s:VGroup>
</s:Group>
