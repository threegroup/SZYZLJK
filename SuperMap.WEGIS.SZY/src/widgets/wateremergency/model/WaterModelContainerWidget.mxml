<?xml version="1.0" encoding="utf-8"?>
<ns:WidgetBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ns="library://ns.supermap.com/flex/wegis/common"
			   xmlns:line="sm.wegis.szy.components.line.*"
			   width="100%" height="100%"
			   xmlns:chart="widgets.wateremergency.chart.*"
			   creationComplete="this_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.supermap.wegis.common.utils.DateUtilEx;
			
			import flashx.textLayout.formats.Direction;
			
			import mx.charts.HitData;
			import mx.charts.LegendItem;
			import mx.charts.chartClasses.CartesianChart;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.Series;
			import mx.charts.events.ChartEvent;
			import mx.charts.events.LegendMouseEvent;
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.core.UIComponent;
			import mx.core.UITextFormat;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			
			import sm.wegis.szy.events.QueryEvent;
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.models.ApplicationModelLocator;
			import sm.wegis.szy.utils.CairngormEventClass;
			import sm.wegis.szy.utils.CairngormEventManager;
			import sm.wegis.szy.vo.ModelContainerShowVO;
			import sm.wegis.szy.vo.WSMethod;
			import sm.wegis.szy.vo.WaterModelParam;
			
			import spark.events.IndexChangeEvent;
			
			import widgets.wateremergency.chart.LineChartDataRender;
			import widgets.wateremergency.chart.LineSeriesEx;
			
			private var modelLocator:ApplicationModelLocator = ApplicationModelLocator.getInstance();
			
			public static const HIDE_STATE:String = "hideState";
			public static const BREAK_STATE:String = "breakState";
			public static const RIVER_STATE:String = "riverState";
			
			/**断面标识*/
			public static const BREAK_COVER:String = "BP";
			/**河道标识*/
			public static const RIVER_WAY:String = "RW";
			
			/**可对比方案列表*/
			[Bindable]
			private var compareSchemeList:ArrayCollection = null;

			
			[Bindable]
			private var targetsList:ArrayCollection = new ArrayCollection([
				{label:"水位",value:1,title:"水位[m]"}, {label:"水深",value:2,title:"水深[m]"},
				{label:"流量",value:3,title:"流量[m³/s]"},{label:"流速",value:4,title:"流速[m/s]"},
				{label:"污染物浓度",value:5,title:"污染物浓度[mg/L]"}]);
			
			[Bindable]
			private var riverCompareMonth:ArrayCollection = new ArrayCollection([
				{label:"一月",value:1}
				,{label:"二月",value:2}
				,{label:"三月",value:3}
				,{label:"四月",value:4}
				,{label:"五月",value:5}
				,{label:"六月",value:6}
				,{label:"七月",value:7}
				,{label:"八月",value:8}
				,{label:"九月",value:9}
				,{label:"十月",value:10}
				,{label:"十一月",value:11}
				,{label:"十二月",value:12}
			]);
			
			protected function this_creationCompleteHandler(event:FlexEvent):void
			{
				initEventListener();
			}
			
			public function initEventListener():void{
				var eList:ArrayCollection = new ArrayCollection([
					[QueryEvent.QUERY_COMPARE_LIST_RESPONSE, queryCompareListResponseHandler],//查询可对比方案列表
					[QueryEvent.QUERY_BREAK_CALC_RESULT_RESPONSE, queryBreakCalcResultResponseHandler],//查询断面计算结果
					[QueryEvent.QUERY_RIVER_CALC_RESULT_RESPONSE, queryRiverCalcResultResponseHandler],//查询河道计算结果
					[QueryEvent.SHOW_MODEL_RESULT_WIDGET, showModelResultWidgetHandler],
					[SystemEvent.SYSTEM_RELOAD, systemReloadHandler]
				]);
				var eventObject:CairngormEventClass = new CairngormEventClass();
				CairngormEventManager.getInstance().attachEvent(eventObject.encode(eList));
			}
			
			//查询可对比方案列表
			private function queryCompareListResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if(result != null && result["success"] 
					&& result["attributes"] 
					&& result["attributes"]["targetList"] is Array)
				{
					compareSchemeList = new ArrayCollection(result["attributes"]["targetList"]);
				}
			}
			
			//响应河道计算结果
			private function queryRiverCalcResultResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if(result != null && result["success"] 
					&& result["attributes"] 
					&& result["attributes"]["result"] is Array)
				{
					var saCol:Array = result["attributes"]["result"] as Array;
					if (saCol != null && saCol.length > 0) 
					{
						//此处动态创建统计图序列，序列数[1-12]
						var sa:Array = [];
						for each(var saData:Object in saCol)
						{
							var chartType:String = saData["type"];
							if(chartType == "LineChart")
							{
								var ls:LineSeriesEx;
								for (var index:int = 0 ; index <hdChart.series.length ;index++){
									if (hdChart.series[index] is LineSeriesEx) {
										ls = hdChart.series[index] as LineSeriesEx;
									}
								}
								if (ls == null) {
									ls = new LineSeriesEx();
								}
								ls.name = saData["label"];
								ls.xField = saData["xField"];
								ls.yField = saData["yField"];
								ls.setStyle("form", "curve");
								ls.setStyle("showDataEffect", slide);
								var scs:SolidColorStroke = new SolidColorStroke(saData["color"]);
								ls.setStyle("lineStroke", scs);
								var cf:ClassFactory = new ClassFactory(LineChartDataRender);
								ls.setStyle("itemRenderer", cf);
								ls.displayName = saData["label"];
								var temp:Array = saData["nodeList"];
								ls.dataProvider = ls.originalDataProvider = new ArrayCollection(temp);
								sa.push(ls);
							}
							else if(chartType == "AreaChart")
							{
								//略
							}
						}
						this.hdChart.series = sa;
					}
				}
				else
				{
					this.hdChart.series = [];
				}
			}
			
			//响应断面计算结果
			private function queryBreakCalcResultResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if (result != null) 
				{
					var saCol:Array = [];
					if(result is Array)
					{
						saCol = result as Array;
					}
					else if(result is Object)
					{
						saCol = [result];
					}
					if (saCol != null && saCol.length > 0) 
					{
						//此处动态创建统计图序列，序列数[1-2]
						var sa:Array = [];
						for each(var saItem:Object in saCol)
						{
							var saData:Object = saItem["attributes"];
							if(saData != null)
							{
								var chartType:String = saData["type"];
								if(chartType == "LineChart")
								{
									var ls:LineSeriesEx = new LineSeriesEx();
									ls.name = saData["label"];
									ls.xField = saData["xField"];
									ls.yField = saData["yField"];
									ls.setStyle("form", "curve");
									ls.setStyle("showDataEffect", slide);
									var scs:SolidColorStroke = new SolidColorStroke(saData["color"]);
									ls.setStyle("lineStroke", scs);
									var cf:ClassFactory = new ClassFactory(LineChartDataRender);
									ls.setStyle("itemRenderer", cf);
									ls.displayName = saData["label"];
									var temp:Array = saData["nodeList"];
									ls.dataProvider = ls.originalDataProvider = new ArrayCollection(temp);
									sa.push(ls);
								}
								else if(chartType == "AreaChart")
								{
									//略
								}
							}
							else 
							{
								this.dmChart.series = [];
							}
						}
						this.dmChart.series = sa;
					}
				} 
				else 
				{
					this.dmChart.series = [];
				}
			}
			
			private function showModelResultWidgetHandler(event:CairngormEvent):void
			{
				var modelShowVO:ModelContainerShowVO =  event.data as  ModelContainerShowVO;
				panel.title = modelShowVO.title;
				this.currentState = modelShowVO.state;
			}
			
			
			protected function closeBt_clickHandler(event:MouseEvent):void
			{
				this.currentState = HIDE_STATE;
			}
			
			//点击查询断面计算结果
			private function queryBt_clickHandler():void
			{
				var waterModelparam:WaterModelParam = modelLocator.waterModelParam;
				waterModelparam.method = getQueryMethodHandler();
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_BREAK_CALC_RESULT);
				queryEvent.dispatch();
			}
			
			//根据选择指标类型，获取后台查询方法,默认为断面
			private function getQueryMethodHandler(methodType:String=BREAK_COVER):String
			{
				var selectItem:Object = null;
				if(methodType == BREAK_COVER)//断面
				{
					selectItem = targetDpList.selectedItem;
					switch(selectItem["value"]) {
						case 1:
							return WSMethod.GetWaterDMPositionData;
						case 2:
							return WSMethod.GetWaterDMDepthData;
						case 3:
							return WSMethod.GetWaterDMFlowData;
						case 4:
							return WSMethod.GetWaterDMSpeedData;
						case 5:
							return "";//断面污染物浓度目前还未实现
					}
				}
				else if(methodType == RIVER_WAY)//河道
				{
					selectItem = targetRwList.selectedItem;
					switch(selectItem["value"]) {
						case 1:
							return WSMethod.GetWaterHDPositionData;
						case 2:
							return WSMethod.GetWaterHDDepthData;
						case 3:
							return WSMethod.GetWaterHDFlowData;
						case 4:
							return WSMethod.GetWaterHDSpeedData;
						case 5:
							return "";//河道污染物浓度目前还未实现
					}
				}
				return "";
			}
			
			//系统重新加载
			public function systemReloadHandler(event:CairngormEvent):void
			{
				
			}
			
			
			protected function hd_wpLegend_itemClickHandler(event:LegendMouseEvent):void
			{
				var currentLegendItem:LegendItem = event.item as LegendItem;
				var currentChartItem:LineSeries = event.item.source as LineSeries;
				if(currentLegendItem != null && currentChartItem != null)
				{
					currentChartItem.visible = currentChartItem.visible?false:true;
				}
			}
			
			//将X轴显示转化为具体的日期格式
			private function dateParseFunction(s:String):Date { 
				var a:Array = s.split("-");
				var newDate:Date = new Date(a[0],a[1]-1,a[2]);
				return newDate;
			}
			
			//X轴时间显示格式
			private function dateFormatFunction(labelValue:Date, previousValue:Object, axis:IAxis):String
			{ 
				var dateFormatter:DateFormatter = new DateFormatter();   
				dateFormatter.formatString = "YYYY-MM-DD";   
				var dateValue:String= dateFormatter.format(labelValue);    
				return dateValue;
			}
			
			//将X轴显示转化为具体的日期格式
			private function dateParseFunction0(s:String):Date { 
				var a:Array = s.split("-");
				var b:Array = a[2].split(" ");
				var c:Array = b[1].split(":");
				var newDate:Date = new Date(a[0],a[1]-1,b[0], c[0], c[1]);
				return newDate;
			}
			
			//断面通用的显示描述
			private function dmDataTipFunction (hitData:HitData):String { 
				var cntData:Object = hitData.item;
				
				var cnt:int = hitData.item[hitData.chartItem.element["yField"]];
				var displayName:String = targetDpList.selectedItem.title;
				return displayName+ ":" + cntData[hitData.chartItem.element["yField"]] + "<br>"+"时间:"+ cntData[hitData.chartItem.element["xField"]];
			}
			
			//河道通用的显示描述
			private function hdDataTipFunction (hitData:HitData):String { 
				var cntData:Object = hitData.item;
				
				var cnt:int = hitData.item[hitData.chartItem.element["yField"]];
				var displayName:String = targetRwList.selectedItem.title;
				return displayName+ ":" + cntData[hitData.chartItem.element["yField"]] + "<br>"+"距离[m]:"+ cntData[hitData.chartItem.element["xField"]];
			}
			
			protected function queryRwBt_clickHandler(event:MouseEvent):void
			{
				var waterModelparam:WaterModelParam = modelLocator.waterModelParam;
				waterModelparam.method = getQueryMethodHandler(RIVER_WAY);
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_RIVER_CALC_RESULT);
				queryEvent.dispatch();
			}
			
			//断面统计图图例
			protected function targetDpList_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				this.dmChart.series = [];
				//设置Y轴名称 
				this.verticalAxis.title = targetDpList.selectedItem.title;
				
				this.hdChart.clearChartGraphic();
			}
			
			//河道统计图图例
			protected function targetRwList_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				this.hdChart.series = [];
				//设置Y轴名称 
				this.hdVerticalAxis.title = targetRwList.selectedItem.title;
				
				this.hdChart.clearChartGraphic();
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:SolidColor id="sc1" color="#F5AC39"/>
		<mx:SolidColor id="sc2" color="#55D8FE"  />
		<s:SolidColorStroke id="s1" color="#F5AC39"/>
		<s:SolidColorStroke id="s2" color="#55D8FE"/>
		<s:SolidColorStroke id="s3" color="#1D66AE"/>
		<s:SolidColorStroke id="hd_s3" color="#FF0000"/>
		<s:SolidColorStroke id="s4" color="#712F82"/>
		<s:SolidColorStroke id="hd_s5" color="#0000FF"/>
		<s:SolidColorStroke id="s5" color="#FF00CC"/>
		<s:SolidColorStroke id="hd_wden_s5" color="#0000FF" weight="10"/>
		<mx:SeriesSlide  id="slide"  direction="up" elementOffset="0"/>
		<mx:SeriesSlide  id="slide2" direction="up"  elementOffset="0"/>
		<s:SolidColorStroke id="chartAxisStroke" color="#BBCCDD" weight="1" alpha="1"/>
		<mx:SeriesInterpolate id="areaSlide" duration="200"/>
		<mx:SeriesInterpolate id="areaSlide2" duration="200"/>
	</fx:Declarations>
	<ns:states>
		<s:State name="hideState"/>
		<s:State name="breakState"/>
		<s:State name="riverState"/>
	</ns:states>
	<s:Panel id="panel" width="100%" height="100%" visible="false" visible.breakState="true" visible.riverState="true">
		<s:controlBarContent>
			<fx:Array>
				<s:Button id="closeBt" skinClass="sm.wegis.szy.skins.CloseLoginButtonSkin" buttonMode="true"
						  click="closeBt_clickHandler(event)"/>
			</fx:Array>
		</s:controlBarContent>
		<!--断面信息展示-->
		<s:Group id="breakGroup" width="100%" height="100%" visible="false" visible.breakState="true" >
			<s:VGroup width="100%" height="100%" gap="3">
				<s:ButtonBar id="breakBTB" dataProvider="{breakVW}"/>
				<s:Rect width="100%" height="1">
					<s:fill>
						<s:SolidColor color="0x979797" alpha="0.5"/>
					</s:fill>
				</s:Rect>
				<mx:ViewStack id="breakVW" width="100%" height="100%">
					<s:NavigatorContent label="断面计算结果"  width="100%" height="100%">
						<s:VGroup  width="100%" height="100%" paddingLeft="5"  paddingTop="5" paddingRight="5" >
							<mx:Grid verticalGap="15" horizontalGap="20">
								<mx:GridRow>
									<mx:GridItem>
										<s:HGroup gap="10" >
											<s:Label text="指标：" height="100%"/>
											<s:DropDownList id="targetDpList" width="160" dataProvider="{targetsList}"  labelField="planNm"
															requireSelection="true" styleName="SystemSelectorStyle"
															change="targetDpList_changeHandler(event)"/>
										</s:HGroup>
									</mx:GridItem>
									<mx:GridItem>
										<s:HGroup gap="10">
											<s:Button id="queryBt" label="查询" buttonMode="true" styleName="SubmitRegisterStyle"  click="queryBt_clickHandler()"/>
											<s:Button id="exportBt" label="导出计算结果" buttonMode="true" styleName="SubmitRegisterStyle" />
										</s:HGroup>
									</mx:GridItem>
								</mx:GridRow>
							</mx:Grid>	
							<line:HLine width="100%"/>
							<chart:LineChartEx id="dmChart" width="100%" height="100%" 
											   dataTipFunction="dmDataTipFunction">
								<!-- vertical axis -->
								<chart:verticalAxis>
									<mx:LinearAxis id="verticalAxis" baseAtZero="false" />
								</chart:verticalAxis>
								<chart:verticalAxisRenderers>
									<mx:AxisRenderer axis="{verticalAxis}"  fontSize="12" axisStroke="{chartAxisStroke}" color="#0000A2" tickStroke="{chartAxisStroke}"/>
								</chart:verticalAxisRenderers>
								<!-- horizontal axis -->
								<chart:horizontalAxis>
									<mx:DateTimeAxis id="ca"  title="时间" interval="1" labelUnits="months" dataUnits="days"
													 displayLocalTime="true" parseFunction="dateParseFunction" labelFunction="dateFormatFunction"/>
								</chart:horizontalAxis>
								<!-- horizontal axis renderer -->
								<chart:horizontalAxisRenderers>
									<mx:AxisRenderer axis="{ca}"  fontSize="12" canDropLabels="true" color="#0000A2" axisStroke="{chartAxisStroke}"
													 tickStroke="{chartAxisStroke}"  labelRenderer="sm.wegis.szy.renders.AxisRendererEx"/>
								</chart:horizontalAxisRenderers>
								<chart:series>
								</chart:series>
							</chart:LineChartEx>
						</s:VGroup>
						<mx:ControlBar top="40" right="20">
							<mx:Legend id="dmLegend" dataProvider="{dmChart}" fontSize="12"  buttonMode="true"
									   direction="vertical" itemClick="hd_wpLegend_itemClickHandler(event)"/>
						</mx:ControlBar>
					</s:NavigatorContent>
					<s:NavigatorContent label="断面地形展示"  width="100%" height="100%">
						
					</s:NavigatorContent>
					<s:NavigatorContent label="断面对比"  width="100%" height="100%">
						<s:VGroup  width="100%" height="100%" paddingLeft="5"  paddingTop="5" paddingRight="5" >
							<s:HGroup gap="10" width="100%">
								<s:Label text="指标：" height="100%"/>
								<s:DropDownList id="targetDpCompareList" width="160" dataProvider="{targetsList}"  
												requireSelection="true" styleName="SystemSelectorStyle"
												change="targetDpList_changeHandler(event)"/>
								<s:Spacer width="30"/>
								<s:Label text="对比方案：" height="100%"/>
								<s:DropDownList id="dmCompareSchemeList" width="160"  dataProvider="{compareSchemeList}"
												requireSelection="true" styleName="SystemSelectorStyle"
												change="targetDpList_changeHandler(event)"/>
								<s:Spacer width="30"/>
								<s:Label text="对比断面：" height="100%"/>
								<s:DropDownList id="dmCompareList" width="160" 
												requireSelection="true" styleName="SystemSelectorStyle"
												change="targetDpList_changeHandler(event)"/>
								<s:Spacer width="30"/>
								<s:Button id="queryCompareBt" label="查询" buttonMode="true" styleName="SubmitRegisterStyle" />
							</s:HGroup>
							<line:HLine width="100%"/>
							<chart:LineChartEx id="dmCompareChart" width="100%" height="100%" 
											   dataTipFunction="dmDataTipFunction">
								<!-- vertical axis -->
								<chart:verticalAxis>
									<mx:LinearAxis id="verticalCompareAxis" baseAtZero="false" />
								</chart:verticalAxis>
								<chart:verticalAxisRenderers>
									<mx:AxisRenderer axis="{verticalCompareAxis}"  fontSize="12" axisStroke="{chartAxisStroke}" color="#0000A2" tickStroke="{chartAxisStroke}"/>
								</chart:verticalAxisRenderers>
								<!-- horizontal axis -->
								<chart:horizontalAxis>
									<mx:DateTimeAxis id="compareCa"  title="时间" interval="1" labelUnits="months" dataUnits="days"
													 displayLocalTime="true" parseFunction="dateParseFunction" labelFunction="dateFormatFunction"/>
								</chart:horizontalAxis>
								<!-- horizontal axis renderer -->
								<chart:horizontalAxisRenderers>
									<mx:AxisRenderer axis="{compareCa}"  fontSize="12" canDropLabels="true" color="#0000A2" axisStroke="{chartAxisStroke}"
													 tickStroke="{chartAxisStroke}"  labelRenderer="sm.wegis.szy.renders.AxisRendererEx"/>
								</chart:horizontalAxisRenderers>
								<chart:series>
								</chart:series>
							</chart:LineChartEx>
						</s:VGroup>
						<mx:ControlBar top="40" right="20">
							<mx:Legend id="dmCompareLegend" dataProvider="{dmCompareChart}" fontSize="12"  buttonMode="true"
									   direction="vertical" itemClick="hd_wpLegend_itemClickHandler(event)"/>
						</mx:ControlBar>
					</s:NavigatorContent>
				</mx:ViewStack>
			</s:VGroup>
		</s:Group>
		<!--河流信息展示-->
		<s:Group id="riverGroup" width="100%"  height="100%"  visible="false" visible.riverState="true" >
			<s:VGroup width="100%" height="100%" gap="3">
				<s:ButtonBar id="riverBTB" dataProvider="{riverVW}"/>
				<s:Rect width="100%" height="1">
					<s:fill>
						<s:SolidColor color="0x979797" alpha="0.5"/>
					</s:fill>
				</s:Rect>
				<mx:ViewStack id="riverVW" width="100%" height="100%">
					<s:NavigatorContent label="河道计算结果"  width="100%" height="100%">
						<s:VGroup  width="100%" height="100%" paddingLeft="5"  paddingTop="5" paddingRight="5">
							<mx:Grid verticalGap="15" horizontalGap="20">
								<mx:GridRow>
									<mx:GridItem>
										<s:HGroup gap="10" >
											<s:Label text="指标：" height="100%"/>
											<s:DropDownList id="targetRwList" width="160" dataProvider="{targetsList}"  
															requireSelection="true" styleName="SystemSelectorStyle"
															change="targetRwList_changeHandler(event)"/>
										</s:HGroup>
									</mx:GridItem>
									<mx:GridItem>
										<s:HGroup gap="10">
											<s:Button id="queryRwBt" label="查询" buttonMode="true" styleName="SubmitRegisterStyle" click="queryRwBt_clickHandler(event)"/>
											<s:Button id="exportRwBt" label="导出计算结果" buttonMode="true" styleName="SubmitRegisterStyle" />
										</s:HGroup>
									</mx:GridItem>
								</mx:GridRow>
							</mx:Grid>	
							<line:HLine width="100%"/>
							<chart:LineChartEx id="hdChart" width="100%" height="100%" 
											   dataTipFunction="hdDataTipFunction">
								<!-- vertical axis -->
								<chart:verticalAxis>
									<mx:LinearAxis id="hdVerticalAxis" baseAtZero="false" />
								</chart:verticalAxis>
								<chart:verticalAxisRenderers>
									<mx:AxisRenderer axis="{hdVerticalAxis}" fontSize="12" axisStroke="{chartAxisStroke}" color="#0000A2" tickStroke="{chartAxisStroke}"/>
								</chart:verticalAxisRenderers>
								<!-- horizontal axis -->
								<chart:horizontalAxis>
									<mx:LinearAxis id="hdHorizontalAxis" title="距离(m)"/>
								</chart:horizontalAxis>
								<!-- horizontal axis renderer -->
								<chart:horizontalAxisRenderers>
									<mx:AxisRenderer axis="{hdHorizontalAxis}" canDropLabels="true" color="#0000A2" axisStroke="{chartAxisStroke}"
													 tickStroke="{chartAxisStroke}" fontSize="12"  labelRenderer="sm.wegis.szy.renders.AxisRendererEx"/>
								</chart:horizontalAxisRenderers>
								<chart:series>
								</chart:series>
							</chart:LineChartEx>
						</s:VGroup>
						<mx:ControlBar top="40" right="20">
							<mx:Legend id="hdLegend" dataProvider="{hdChart}"  fontSize="12"  buttonMode="true"
									   direction="vertical" itemClick="hd_wpLegend_itemClickHandler(event)"/>
						</mx:ControlBar>
					</s:NavigatorContent>
					<s:NavigatorContent label="河道对比"  width="100%" height="100%">
						<mx:Grid verticalGap="15" horizontalGap="20">
							<mx:GridRow>
								<mx:GridItem>
									<s:HGroup gap="10" >
										<s:Label text="指标：" height="100%"/>
										<s:DropDownList id="riverTargetRwList" width="160" dataProvider="{targetsList}"  
														requireSelection="true" styleName="SystemSelectorStyle"
														/>
										<s:Spacer width="30"/>
										<s:Label text="对比方案：" height="100%"/>
										<s:DropDownList id="riverCompareSchemeList" width="160"  
														requireSelection="true" styleName="SystemSelectorStyle"
														change="targetDpList_changeHandler(event)"/>
									</s:HGroup>
								</mx:GridItem>
								<mx:GridItem>
									<s:HGroup gap="10">
										<s:Button id="riverQueryRwBt" label="查询" buttonMode="true" styleName="SubmitRegisterStyle"/>
										<s:Button id="mapCompare" label="浓度地图展示" buttonMode="true" styleName="SubmitRegisterStyle" />
									</s:HGroup>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>	
						<line:HLine width="100%"/>
						<s:HGroup >
							<s:Label text="对比月份："/>
							<s:DropDownList id="riverCompareMonthDpList" dataProvider="{riverCompareMonth}"/>
						</s:HGroup>
						<chart:LineChartEx id="riverCompareChart" width="100%" height="100%" 
										   dataTipFunction="hdDataTipFunction">
							<!-- vertical axis -->
							<chart:verticalAxis>
								<mx:LinearAxis id="riverVerticalAxis" baseAtZero="false" />
							</chart:verticalAxis>
							<chart:verticalAxisRenderers>
								<mx:AxisRenderer axis="{riverVerticalAxis}" fontSize="12" axisStroke="{chartAxisStroke}" color="#0000A2" tickStroke="{chartAxisStroke}"/>
							</chart:verticalAxisRenderers>
							<!-- horizontal axis -->
							<chart:horizontalAxis>
								<mx:LinearAxis id="riverHorizontalAxis" title="距离(m)"/>
							</chart:horizontalAxis>
							<!-- horizontal axis renderer -->
							<chart:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{riverHorizontalAxis}" canDropLabels="true" color="#0000A2" axisStroke="{chartAxisStroke}"
												 tickStroke="{chartAxisStroke}" fontSize="12"  labelRenderer="sm.wegis.szy.renders.AxisRendererEx"/>
							</chart:horizontalAxisRenderers>
							<chart:series>
							</chart:series>
						</chart:LineChartEx>
						<mx:ControlBar top="40" right="20">
							<mx:Legend dataProvider="{riverCompareChart}"  fontSize="12"  buttonMode="true"
									   direction="vertical" itemClick="hd_wpLegend_itemClickHandler(event)"/>
						</mx:ControlBar>
					</s:NavigatorContent>
				</mx:ViewStack>
			</s:VGroup>
		</s:Group>
	</s:Panel>
</ns:WidgetBase>
