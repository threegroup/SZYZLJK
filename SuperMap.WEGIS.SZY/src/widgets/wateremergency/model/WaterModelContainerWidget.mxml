<?xml version="1.0" encoding="utf-8"?>
<ns:WidgetBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ns="library://ns.supermap.com/flex/wegis/common"
			   xmlns:line="sm.wegis.szy.components.line.*"
			   width="100%" height="100%"
			   xmlns:chart="widgets.wateremergency.chart.*"
			   creationComplete="this_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.supermap.wegis.common.utils.DateUtilEx;
			
			import flashx.textLayout.formats.Direction;
			
			import mx.charts.HitData;
			import mx.charts.LegendItem;
			import mx.charts.chartClasses.CartesianChart;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.Series;
			import mx.charts.events.ChartEvent;
			import mx.charts.events.LegendMouseEvent;
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.core.UIComponent;
			import mx.core.UITextFormat;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			
			import sm.wegis.szy.events.QueryEvent;
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.models.ApplicationModelLocator;
			import sm.wegis.szy.utils.CairngormEventClass;
			import sm.wegis.szy.utils.CairngormEventManager;
			import sm.wegis.szy.vo.ModelContainerShowVO;
			import sm.wegis.szy.vo.WSMethod;
			import sm.wegis.szy.vo.WaterModelParam;
			
			private var modelLocator:ApplicationModelLocator = ApplicationModelLocator.getInstance();
			
			public static const HIDE_STATE:String = "hideState";
			public static const BREAK_STATE:String = "breakState";
			public static const RIVER_STATE:String = "riverState";
			
			//--------------------------------断面-------------------------------------------
			[Bindable]
			/**断面地形剖面*/
			private var tpDs:ArrayCollection = new ArrayCollection();
			[Bindable]
			/**断面流量过程*/
			private var wfDs:ArrayCollection = new ArrayCollection();
			[Bindable]
			/**断面水深*/
			private var wdDs:ArrayCollection = new ArrayCollection();
			[Bindable]
			/**断面水流流速*/
			private var wsDs:ArrayCollection = new ArrayCollection();
			[Bindable]
			/**断面污染物浓度*/
			private var wDenDs:ArrayCollection = new ArrayCollection();
			
			private var startPoint:Point;
			private var endPoint:Point;
			
			[Bindable]
			private var targetsList:ArrayCollection = new ArrayCollection([
				{label:"水位",value:1,title:"水位[m]"}, {label:"水深",value:2,title:"水深[m]"},
				{label:"流量",value:3,title:"流量[m³/s]"},{label:"流速",value:4,title:"流速[m/s]"},
				{label:"污染物浓度",value:5,title:"污染物浓度[mg/L]"}]);
			
			private function queryBreakCalcResultResponseHandler(event:CairngormEvent):void
			{
				//设置Y轴名称 
				verticalAxis.title = targetDpList.selectedItem.title;
				var result:Object = event.data;
				if (result != null) {
					if (result is Array && (result as Array).length > 0) {
						if (0 in result && result[0]["success"] == true) {
							waterCPositionLine.displayName = result[0]["attributes"]["label"];
							waterCPositionLine.dataProvider = waterCPositionLine.originalDataProvider = new ArrayCollection(result[0]["attributes"]["nodeList"]);
						}
						if (1 in result && result[1]["success"] == true) {
							waterRPositionLine.visible = true;
							waterRPositionLine.displayName = result[1]["attributes"]["label"];
							waterRPositionLine.dataProvider = waterRPositionLine.originalDataProvider = new ArrayCollection(result[1]["attributes"]["nodeList"]);
						}
					} else {
						if ( result["success"] == true) {
							waterCPositionLine.displayName = result["attributes"]["label"];
							waterCPositionLine.dataProvider = waterCPositionLine.originalDataProvider = new ArrayCollection(result["attributes"]["nodeList"]);
							waterRPositionLine.visible = false;
							waterRPositionLine.displayName ="";
							waterRPositionLine.dataProvider = waterRPositionLine.originalDataProvider = null;
						}
					}
				} else {
					waterCPositionLine.dataProvider = null;
					waterRPositionLine.dataProvider = null;
				}
			}
			
			protected function this_creationCompleteHandler(event:FlexEvent):void
			{
				initEventListener();
			}
			
			public function initEventListener():void{
				var eList:ArrayCollection = new ArrayCollection([
					[QueryEvent.QUERY_BREAK_CALC_RESULT_RESPONSE, queryBreakCalcResultResponseHandler],//查询断面计算结果
					[QueryEvent.SHOW_MODEL_RESULT_WIDGET, showModelResultWidgetHandler],
					[SystemEvent.SYSTEM_RELOAD, systemReloadHandler]
				]);
				var eventObject:CairngormEventClass = new CairngormEventClass();
				CairngormEventManager.getInstance().attachEvent(eventObject.encode(eList));
			}
			
			private function showModelResultWidgetHandler(event:CairngormEvent):void
			{
				var modelShowVO:ModelContainerShowVO =  event.data as  ModelContainerShowVO;
				panel.title = modelShowVO.title;
				this.currentState = modelShowVO.state;
			}
			
			
			protected function closeBt_clickHandler(event:MouseEvent):void
			{
				this.currentState = HIDE_STATE;
			}
			
			//点击查询断面计算结果
			private function queryBt_clickHandler():void
			{
				var waterModelparam:WaterModelParam = modelLocator.waterModelParam;
				waterModelparam.method = getQueryMethodHandler();
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_BREAK_CALC_RESULT);
				queryEvent.dispatch();
			}
			
			//根据选择指标类型，获取后台查询方法
			private function getQueryMethodHandler():String
			{
				var selectItem:Object = targetDpList.selectedItem;
				switch(selectItem["value"]) {
					case 1:
						return WSMethod.GetWaterDMPositionData;
					case 2:
						return WSMethod.GetWaterDMDepthData;
					case 3:
						return WSMethod.GetWaterDMFlowData
					case 4:
						return WSMethod.GetWaterDMSpeedData
						//					case 5:
						//						return WSMethod.
				}
				return "";
			}
			//系统重新加载
			public function systemReloadHandler(event:CairngormEvent):void
			{
				
			}
			
			
			protected function hd_wpLegend_itemClickHandler(event:LegendMouseEvent):void
			{
				var currentLegendItem:LegendItem = event.item as LegendItem;
				var currentChartItem:LineSeries = event.item.source as LineSeries;
				if(currentLegendItem != null && currentChartItem != null)
				{
					currentChartItem.visible = currentChartItem.visible?false:true;
				}
			}
			
			//将X轴显示转化为具体的日期格式
			private function dateParseFunction(s:String):Date { 
				var a:Array = s.split("-");
				var newDate:Date = new Date(a[0],a[1]-1,a[2]);
				return newDate;
			}
			
			//X轴时间显示格式
			private function dateFormatFunction(labelValue:Date, previousValue:Object, axis:IAxis):String
			{ 
				var dateFormatter:DateFormatter = new DateFormatter();   
				dateFormatter.formatString = "YYYY-MM-DD";   
				var dateValue:String= dateFormatter.format(labelValue);    
				return dateValue;
			}
			
			//将X轴显示转化为具体的日期格式
			private function dateParseFunction0(s:String):Date { 
				var a:Array = s.split("-");
				var b:Array = a[2].split(" ");
				var c:Array = b[1].split(":");
				var newDate:Date = new Date(a[0],a[1]-1,b[0], c[0], c[1]);
				return newDate;
			}
			
			
			
			//断面--水位过程统计图
			private function waterPositionDataTipFunction (hitData:HitData):String { 
				var cntData:Object = hitData.item;
				
				var cnt:int = hitData.item[hitData.chartItem.element["yField"]];
				var displayName:String = hitData.chartItem.element["displayName"];
				return displayName+ ":" + cntData[hitData.chartItem.element["yField"]] + "<br>"+"时间:"+ cntData[hitData.chartItem.element["xField"]];
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:SolidColor id="sc1" color="#F5AC39"/>
		<mx:SolidColor id="sc2" color="#55D8FE"  />
		<s:SolidColorStroke id="s1" color="#F5AC39"/>
		<s:SolidColorStroke id="s2" color="#55D8FE"/>
		<s:SolidColorStroke id="s3" color="#1D66AE"/>
		<s:SolidColorStroke id="hd_s3" color="#FF0000"/>
		<s:SolidColorStroke id="s4" color="#712F82"/>
		<s:SolidColorStroke id="hd_s5" color="#0000FF"/>
		<s:SolidColorStroke id="s5" color="#FF00CC"/>
		<s:SolidColorStroke id="hd_wden_s5" color="#0000FF" weight="10"/>
		<mx:SeriesSlide  id="slide"  direction="up" elementOffset="0"/>
		<mx:SeriesSlide  id="slide2" direction="up"  elementOffset="0"/>
		<s:SolidColorStroke id="chartAxisStroke" color="#BBCCDD" weight="1" alpha="1"/>
		<mx:SeriesInterpolate id="areaSlide" duration="200"/>
		<mx:SeriesInterpolate id="areaSlide2" duration="200"/>
	</fx:Declarations>
	<ns:states>
		<s:State name="hideState"/>
		<s:State name="breakState"/>
		<s:State name="riverState"/>
	</ns:states>
	<s:Panel id="panel" width="100%" height="100%" visible="false" visible.breakState="true" visible.riverState="true">
		<s:controlBarContent>
			<fx:Array>
				<s:Button id="closeBt" skinClass="sm.wegis.szy.skins.CloseLoginButtonSkin" buttonMode="true"
						  click="closeBt_clickHandler(event)"/>
			</fx:Array>
		</s:controlBarContent>
		<!--断面信息展示-->
		<s:Group id="breakGroup" width="100%" height="100%" visible="false" visible.breakState="true" >
			<s:VGroup width="100%" height="100%" gap="3">
				<s:ButtonBar id="breakBTB" dataProvider="{breakVW}"/>
				<s:Rect width="100%" height="1">
					<s:fill>
						<s:SolidColor color="0x979797" alpha="0.5"/>
					</s:fill>
				</s:Rect>
				<mx:ViewStack id="breakVW" width="100%" height="100%">
					<s:NavigatorContent label="断面计算结果"  width="100%" height="100%">
						<s:VGroup  width="100%" height="100%" paddingLeft="5"  paddingTop="5" paddingRight="5" >
							<mx:Grid verticalGap="15" horizontalGap="20">
								<mx:GridRow>
									<mx:GridItem>
										<s:HGroup gap="10" >
											<s:Label text="指标：" height="100%"/>
											<s:DropDownList id="targetDpList" width="160" dataProvider="{targetsList}"  
															requireSelection="true" styleName="SystemSelectorStyle"/>
										</s:HGroup>
									</mx:GridItem>
									<mx:GridItem>
										<s:HGroup gap="10">
											<s:Button id="queryBt" label="查询" buttonMode="true" styleName="SubmitRegisterStyle"  click="queryBt_clickHandler()"/>
											<s:Button id="exportBt" label="导出计算结果" buttonMode="true" styleName="SubmitRegisterStyle" />
										</s:HGroup>
									</mx:GridItem>
								</mx:GridRow>
							</mx:Grid>	
							<line:HLine width="100%"/>
							<chart:LineChartEx id="waterPositionChart" width="100%" height="100%" 
										  dataTipFunction="waterPositionDataTipFunction">
								<!-- vertical axis -->
								<chart:verticalAxis>
									<mx:LinearAxis id="verticalAxis" baseAtZero="false" />
								</chart:verticalAxis>
								<chart:verticalAxisRenderers>
									<mx:AxisRenderer axis="{verticalAxis}" axisStroke="{chartAxisStroke}" color="#0000A2" tickStroke="{chartAxisStroke}"/>
								</chart:verticalAxisRenderers>
								<!-- horizontal axis -->
								<chart:horizontalAxis>
									<mx:DateTimeAxis id="ca"  title="时间" interval="1" labelUnits="months" dataUnits="days"
													 displayLocalTime="true" parseFunction="dateParseFunction" labelFunction="dateFormatFunction"/>
								</chart:horizontalAxis>
								<!-- horizontal axis renderer -->
								<chart:horizontalAxisRenderers>
									<mx:AxisRenderer axis="{ca}" canDropLabels="true" color="#0000A2" axisStroke="{chartAxisStroke}"
													 tickStroke="{chartAxisStroke}"  labelRenderer="sm.wegis.szy.renders.AxisRendererEx"/>
								</chart:horizontalAxisRenderers>
								<chart:series>
									<chart:LineSeriesEx id="waterCPositionLine" itemRenderer="widgets.wateremergency.chart.LineChartDataRender"
														xField="time" yField="value" lineStroke="{s3}" form="curve" showDataEffect="{slide}" />
									<chart:LineSeriesEx id="waterRPositionLine" itemRenderer="widgets.wateremergency.chart.LineChartDataRenderEx"
														xField="time" yField="value" lineStroke="{s5}" form="curve" showDataEffect="{slide}" />
								</chart:series>
							</chart:LineChartEx>
							<mx:Legend dataProvider="{waterPositionChart}"   buttonMode="true"
									   direction="horizontal" itemClick="hd_wpLegend_itemClickHandler(event)"/>
						</s:VGroup>
					</s:NavigatorContent>
					<s:NavigatorContent label="断面地形展示"  width="100%" height="100%">
						
					</s:NavigatorContent>
					<s:NavigatorContent label="断面对比"  width="100%" height="100%">
						
					</s:NavigatorContent>
				</mx:ViewStack>
			</s:VGroup>
		</s:Group>
		<!--河流信息展示-->
		<s:Group id="riverGroup" width="100%"  height="100%"  visible="false" visible.riverState="true" >
			
		</s:Group>
	</s:Panel>
</ns:WidgetBase>
