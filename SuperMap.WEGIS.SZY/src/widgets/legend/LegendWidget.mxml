<?xml version="1.0" encoding="utf-8"?>
<ns:WidgetBase xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ns="library://ns.supermap.com/flex/wegis/common"
			   xmlns:container="com.supermap.wegis.common.components.container.*"
			   creationComplete="initLegendManager(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.supermap.wegis.common.components.container.ContainerItem;
			import com.supermap.wegis.common.core.widget.WidgetBase;
			import com.supermap.wegis.common.core.widget.WidgetManager;
			
			import mx.events.FlexEvent;
			
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.models.ApplicationModelLocator;
			import sm.wegis.szy.skins.MenuItemSkinEx;
			
			import spark.effects.Resize;
			
			[Bindable]
			private var modelLocator:ApplicationModelLocator  = ApplicationModelLocator.getInstance();
			
			[Embed(source="assets/image/legend/down.png")]
			private var downImage:Class;
			
			[Embed(source="assets/image/legend/up.png")]
			private var upImage:Class;
			
			/**图例面板顶部菜单项目高度*/
			[Bindable]
			public var menuHeight:Number = 25;
			
			/**图例面板顶部菜单项目宽度*/
			[Bindable]
			public var menuWidth:Number = 25;
			
			//初始化管理器
			protected function initLegendManager(event:FlexEvent):void
			{
				controlBtn.addEventListener(MouseEvent.CLICK, btnClickHandler);
				ow = this.width;
				oh = this.height;
				switchPanel();
				//添加子模块
				CairngormEventDispatcher.getInstance().addEventListener(SystemEvent.SYSTEM_WIDGET_ADD
					, sysWidgetAddHandler);
			}
			
			private function sysWidgetAddHandler(event:SystemEvent):void{
				var item:Object = event.data;
				if(item != null)
				{
					var con:ContainerItem = containerManager.getContainerItem(item["key"]);
					con.alpha = 0.9;
					item.parent = con;
					item["isVisable"] = containerManager.visible;
					WidgetManager.getInstance().loadWidget(item);
					containerManager.addContainer(item["key"], item["name"], con);
				}
			}
			
			/**预加载模块*/
			private function preLoadWidget():void
			{
				if(modelLocator.specialWidgetInfo.specialWidgetMap.size > 0)
				{
					var keys:Array = modelLocator.specialWidgetInfo.specialWidgetMap.keysToArray();
					for (var i:int = 0; i < keys.length; i++) 
					{
						var item:Object = modelLocator.specialWidgetInfo.specialWidgetMap.itemFor(keys[i]);
						if(item != null)
						{
							var con:ContainerItem = containerManager.getContainerItem(item["key"]);
							con.alpha = 0.9;
							item.parent = con;
							item["isVisable"] = containerManager.visible;
							WidgetManager.getInstance().loadWidget(item);
							containerManager.addContainer(item["key"], item["name"], con);
						}
					}
					
					modelLocator.specialWidgetInfo.specialWidgetMap.clear();
					modelLocator.specialWidgetInfo.specialWidgetMap = null;
				}
			}
			
			//隐藏或显示面板
			private var isInit:Boolean = false;
			private var ow:Number = 0;
			private var oh:Number = 0;
			private function btnClickHandler(event:MouseEvent):void
			{
				switchPanel();
			}
			
			/**控制面板显示隐藏*/
			private function switchPanel():void{
				//创建特效
				var resizeEffect:Resize = new Resize();
				resizeEffect.duration = 500;
				resizeEffect.repeatCount = 1;
				resizeEffect.target = this;
				
				var w:Number = this.width;
				var h:Number = this.height;
				
				var mw:Number = this.controlBtn.width;
				var mh:Number = this.controlBtn.height;
				
				if(w > mw)
				{
					resizeEffect.widthFrom = w;
					resizeEffect.widthTo = mw;
					resizeEffect.heightFrom = h;
					resizeEffect.heightTo = mh;
					
					this.width = mw;
					this.height = mh;
					
					this.controlBtn.setStyle("icon", upImage);
					
					containerManager.visible = false;
					containerManager.includeInLayout = false;
				}
				else
				{
					resizeEffect.widthFrom = mw;
					resizeEffect.widthTo = ow;
					resizeEffect.heightFrom = mh;
					resizeEffect.heightTo = oh;
					
					this.width = ow;
					this.height = oh;
					
					this.controlBtn.setStyle("icon", downImage);
					
					containerManager.visible = true;
					containerManager.includeInLayout = true;
				}
				if(!isInit)
				{
					preLoadWidget();
					isInit = true;
				}
				resizeEffect.play();
			}
			
			override protected  function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				bgFill.alpha = getStyle('backgroundAlpha') == null ? 1 :  getStyle('backgroundAlpha');
			}
		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor id="bgFill" color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	<s:Rect  left="-1" right="-1" bottom="-1" top="-1">
		<s:stroke>
			<s:SolidColorStroke color="0xB5B9C0" />
		</s:stroke>
	</s:Rect>
	<s:HGroup width="100%" height="100%" gap="0" verticalAlign="top">
		<s:Button id="controlBtn" width="{menuWidth}" height="{menuHeight}"  skinClass="sm.wegis.szy.skins.ControlButtonSkin" buttonMode="true"/>
		<container:ContainerManager id="containerManager" width="100%" height="100%"
									buttonHeight="25" buttonWidth="80" enabledEffect="false"
									menuItemSkinClass="{MenuItemSkinEx}"/>
	</s:HGroup>
</ns:WidgetBase>
