<?xml version="1.0" encoding="utf-8"?>
<ns:WidgetBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:ns="library://ns.supermap.com/flex/wegis/common"
			   width="100%" height="100%"
			   creationComplete="creationCompleteHandler(event)"
			   WidgetAddComplete="widgetAddCompleteHandler(event)"
			   WidgetRemove="widgetRemoveHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.supermap.web.core.Feature;
			import com.supermap.web.core.geometry.GeoPoint;
			import com.supermap.web.core.styles.PictureMarkerStyle;
			import com.supermap.web.core.styles.PredefinedMarkerStyle;
			import com.supermap.wegis.common.components.events.BaseWidgetEvent;
			import com.supermap.wegis.common.core.resourceManager.ResourceManagerEx;
			import com.supermap.wegis.common.mappingEx.FeaturesLayerEx;
			
			import mx.collections.ArrayCollection;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			
			import sm.wegis.szy.core.baseclass.DottedLineClass;
			import sm.wegis.szy.events.QueryEvent;
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.models.ApplicationModelLocator;
			import sm.wegis.szy.utils.CairngormEventClass;
			import sm.wegis.szy.utils.CairngormEventManager;
			import sm.wegis.szy.utils.FeatureLayerUtil;
			import sm.wegis.szy.vo.ConstVO;
			
			import spark.components.Group;
			
			import widgets.waterevaluation.Items.CheckBoxGroup;
			import widgets.waterevaluation.Items.CommonGroup;
			import widgets.waterevaluation.Items.RadioButtonGroup;
			import widgets.waterevaluation.Items.TextGroup;
			private var modelLocator:ApplicationModelLocator = ApplicationModelLocator.getInstance();
			[Bindable]
			/**评价条件面板高度*/
			private var searchRiverPanelHeight:Number = 0;
			
			[Bindable]
			/**评价年份面板高度*/
			private var searchYearPanelHeight:Number = 0;
			
			[Bindable]
			/**评价类型面板高度*/
			private var searchTypePanelHeight:Number = 0;
			
			[Bindable]
			/**评价周期面板高度*/
			private var searchPeriodPanelHeight:Number = 0;
			
			/**默认显示字数*/
			private const LENGTH:Number = 5;
			
			/**复选*/
			private static const CHECKBOX:String ="0";      
			/**单选*/
			private static const RADIOBUTTON:String ="1";  
			/**文本*/
			private static const TEXT:String ="2"; 
			
			/**评价类型*/
			private var searchTypeData:Object = {
				"nodeListSelect": [
					{
						"hasCustom": "1",
						"initialDisplay": "1",
						"isSelect": "1",
						"isShow": "1",
						"optionList": [
							{
								"dicOrder": "周",
								"optionName": "周",
								"optionValue": "week"
							},
							{
								"dicOrder": "旬",
								"optionName": "旬",
								"optionValue": "tenDays"
							},
							{
								"dicOrder": "月",
								"optionName": "月",
								"optionValue": "month"
							},
							{
								"dicOrder": "季度",
								"optionName": "季度",
								"optionValue": "quarterly"
							},
							{
								"dicOrder": "年",
								"optionName": "年",
								"optionValue": "fengShui"
							},
							{
								"dicOrder": "丰水期 ",
								"optionName": "丰水期 ",
								"optionValue": "fengShui"
							},
							{
								"dicOrder": "枯水期 ",
								"optionName": "枯水期 ",
								"optionValue": "kuShui"
							},
							{
								"dicOrder": "平水期",
								"optionName": "平水期",
								"optionValue": "pingShui"
							}],
						"orderIndex": "3",
						"propertyDisplayType": "1",
						"propertyType": "3",
						"propertyId": "",
						"propertyName": "评价周期"
					}]
			};
			
			/**评价河流*/
			private var riverListData:Object = {
				"nodeListSelect": [
					{
						"initialDisplay": "1",
						"isSelect": "1",
						"isShow": "1",
						"optionList":[],
						"orderIndex": "1",
						"propertyDisplayType": "0",
						"propertyId": "",
						"propertyName": "评价河流",
						"propertyType": "1",
						"surveyFields": "",
						"surveyTable": ""
					}]
			};
			
			/**评价年份*/
			private var yearListData:Object = {
				"nodeListSelect": [
					{
						"initialDisplay": "1",
						"isSelect": "1",
						"isShow": "1",
						"optionList": [],
						"orderIndex": "2",
						"propertyDisplayType": "1",
						"propertyId": "",
						"propertyName": "评价年份"
					}]
			};
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//计算条件面板高度
				if(stage != null)
				{
					searchTypePanelHeight = 200;
					searchYearPanelHeight = 100;
					searchPeriodPanelHeight = 200;
					searchRiverPanelHeight = stage.stageHeight - 120 
						- searchYearPanelHeight 
						- searchTypePanelHeight 
						- searchPeriodPanelHeight;
				}
				
				initEventListener();
				queryDefaultStation();
				queryRiverList();
				
				//初始化评价类型列表
				decodeUI(searchTypeContainer, searchTypePanelHeight, searchTypeData);
			}
			
			/**清空条件内容*/
			public function clear():void
			{
				this.searchRiverContainer.removeAllElements();
			}
			
			/**根据需要组装河流数据*/
			private function decodeRiverData(targetData:Object, data:Array=null):void
			{
				targetData["nodeListSelect"][0]["optionList"]=[];
				if(data == null)
					return;
				
				if(data != null && data.length >0)
				{
					for each (var item:Object in data) 
					{
						var tf:Object = {};
						tf["dicOrder"] = item["River_name"];
						tf["optionName"] = item["River_name"];
						tf["optionValue"] = item["River_id"];
						targetData["nodeListSelect"][0]["optionList"].push(tf);
					}
				}
			}
			
			/**根据需要组装河流年份数据*/
			private function decodeYearData(targetData:Object, data:Array=null):void
			{
				targetData["nodeListSelect"][0]["optionList"]=[];
				if(data == null)
					return;
				
				if(data != null && data.length >0)
				{
					for each (var item:Object in data) 
					{
						var tf:Object = {};
						tf["dicOrder"] = item["year"];
						tf["optionName"] = item["year"];
						tf["optionValue"] = item["year"];
						targetData["nodeListSelect"][0]["optionList"].push(tf);
					}
				}
			}
			
			//解释界面数据 ,data包含：显示类型,属性类型,预定义列表信息
			private function decodeUI(con:Group, maxContentHeight:Number, data:Object=null):void
			{
				if(data == null)
					return;
				
				con.removeAllElements();
				
				//生成常用查询条件
				if(data.hasOwnProperty("nodeListSelect") 
					&& data["nodeListSelect"] is Array 
					&& (data["nodeListSelect"] as Array).length >0)
				{
					var tempArr:Array = data["nodeListSelect"];
					//格式化条件组名
					tempArr = formatData(tempArr, "propertyName", false);
					
					//遍历数组，生成界面
					for (var i:int = 0; i < tempArr.length; i++) 
					{
						var item:Object = tempArr[i];
						
						//格式化预定义条件值
						if(item != null && item.hasOwnProperty("optionList")
							&& item["optionList"] is Array && (item["optionList"] as Array).length > 0)
						{
							item["optionList"] = formatData(item["optionList"], "optionName", true);
						}
						
						var gapLine:DottedLineClass = null;
						if(i <= tempArr.length - 2)
						{
							gapLine = new DottedLineClass();
							gapLine.percentWidth = 100;
							gapLine.height = 1;
						} 
						
						switch(item["propertyDisplayType"])
						{
							case TEXT:
							{
								var t:TextGroup = new TextGroup();
								t.data = item;
								con.addElement(t);
								if(gapLine)
									con.addElement(gapLine as IVisualElement);
								break;
							}
							case CHECKBOX:
							{
								var c:CheckBoxGroup = new CheckBoxGroup();
								c.data = item;
								c.isFirstItemSelected = true;
								c.maxContentHeight = maxContentHeight;
								con.addElement(c);
								if(gapLine)
									con.addElement(gapLine as IVisualElement);
								break;
							}
							case RADIOBUTTON:
							{
								var r:RadioButtonGroup = new RadioButtonGroup();
								r.data = item;
								r.isFirstItemSelected = true;
								r.maxContentHeight = maxContentHeight;
								con.addElement(r);
								if(gapLine)
									con.addElement(gapLine as IVisualElement);
								break;
							}
							default:
							{
								break;
							}
						}
					}
				}
			}
			
			/**获取查询参数*/
			private function getQueryParam(con:Group):Array
			{
				var items:Array = [];
				for(var i:int = 0;i < con.numElements; i++)
				{
					items.push(con.getElementAt(i));
				}
				var temps:Array = [];
				if(items.length > 0)
				{
					for each (var item:CommonGroup in items) 
					{
						if(item != null)
						{
							if(item.isSelected)
								temps.push(item.getContent().value);
						}
					}
				}
				return temps;
			}
			
			//常用条件字段格式化
			public function formatData(dObj:Object, field:String="", isValue:Boolean=false):Array
			{
				if(dObj != null && dObj is Array)
				{
					var tempArray:Array = dObj as Array;
					if(tempArray != null)
					{
						var len:int = tempArray.length;
						if(len > 0)
						{
							for each (var item:Object in tempArray) 
							{
								if(item != null)
								{
									var value:String  = item[field]==null?" ":item[field];
									var strLen:int = value.length;
									if(strLen <= LENGTH)
									{
										if(isValue)
										{
											var dLen:Number = LENGTH - strLen;
											for (var i:int = 0; i < dLen; i++) 
											{
												value = value + "  ";
											} 
											
											item[field] = value;
										}
										else
										{
											item[field] = value + ":";
										}
									}
									else
									{
										if(isValue)
										{
											item["tip"] = value;
											item[field] = value.substr(0,LENGTH-1) + "..";
										}
										else
										{
											item["tip"] = value;
											item[field] = value.substr(0,LENGTH-1) + ":";
										}
									}
								}
							}
						}
						
						return tempArray;
					}
				}
				
				return null;
			}
			
			public function initEventListener():void{
				var eList:ArrayCollection = new ArrayCollection([
					[QueryEvent.QUERY_RIVER_LIST_RESPONSE, queryRiverListResponseHandler],//评价河流
					[QueryEvent.QUERY_RIVER_YEAR_RESPONSE, queryRiverYearResponseHandler],//评价年份
					[QueryEvent.QUERY_RIVER_PERIOD_RESPONSE, queryRiverPeriodResponseHandler],//评价周期
					[QueryEvent.QUERY_DEFAULT_POINT_RESPONSE, queryDefaultPointResponseHandler],//获取对象详细属性是否成功，如果不成功，不勾选
					[QueryEvent.HIDE_WATER_WATCH_WIDGET, clearSystemHandler],
					[SystemEvent.SYSTEM_RELOAD, systemReloadHandler]
				]);
				var eventObject:CairngormEventClass = new CairngormEventClass();
				CairngormEventManager.getInstance().attachEvent(eventObject.encode(eList));
			}
			
			
			//查明河流列表
			private function queryRiverList():void
			{
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_RIVER_LIST);
				queryEvent.dispatch();
			}
			
			//查明河流评价年份
			private function queryRiverYear(riverList:Array):void
			{
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_RIVER_YEAR);
				if(riverList != null && riverList.length >0)
				{
					queryEvent.data = riverList.join(",");
				}
				else
				{
					queryEvent.data = null;
				}
				queryEvent.dispatch();
			}
			
			//查明河流评价周期列表
			private function queryRiverPeriod():void
			{
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_RIVER_PERIOD);
				queryEvent.dispatch();
			}
			
			//查询评价河流列表响应
			private function queryRiverListResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if (result != null && result.success == true) {
					var targetList:Object = result.attributes.targetList;
					if(targetList != null)
					{
						if(targetList is Array)
							decodeRiverData(riverListData, targetList as Array);
						else
							decodeRiverData(riverListData,[targetList]);
						
						decodeUI(searchRiverContainer, searchRiverPanelHeight, riverListData);
						
						//默认选中第一条河流
						queryRiverYear(getQueryParam(searchRiverContainer));
					}
				}
			}
			
			//查询评价河流年份列表响应
			private function queryRiverYearResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if (result != null && result.success == true) {
					var targetList:Object = result.attributes.targetList;
					if(targetList != null)
					{
						if(targetList is Array)
							decodeYearData(yearListData, targetList as Array);
						else
							decodeYearData(yearListData,[targetList]);
						
						//此处派发默认选中项目评价年份
						decodeUI(searchYearContainer, searchYearPanelHeight, yearListData);
					}
				}
			}
			
			//查询评价河流周期列表响应
			private function queryRiverPeriodResponseHandler(event:CairngormEvent):void
			{
				
			}
			
			//查询默认点成功
			public function queryDefaultPointResponseHandler(event:CairngormEvent):void
			{
				var result:Object = event.data;
				if (result != null && result.success == true) {
					if (result.attributes.targetList !=null)
						var targetList:Object = result.attributes.targetList;
					var featuresLayer:FeaturesLayerEx = FeatureLayerUtil.getFeatureLayerById(ConstVO.EVALUATION_FEATURE_LAYER, modelLocator.mapCtrl);
					featuresLayer.clear();
					//如果选择成功，切换选择图标，如果取到勾选，切换普通图标
					var predefinedMarkerStyle:PredefinedMarkerStyle = new PredefinedMarkerStyle();
					predefinedMarkerStyle.size = 7;
//					var pictureMarkerStyle:PictureMarkerStyle = new PictureMarkerStyle();
//					pictureMarkerStyle.source = ResourceManagerEx.FindResource("station").cls;
					
					for each(var item:Object in targetList) {
						var positionStr:String = item.location;
						if (positionStr != null && positionStr.split(",").length == 2) {
							var positions:Array = positionStr.split(",");
							item.x = Number(positions[0]);
							item.y = Number(positions[1]);
							var geoPoint:GeoPoint = new GeoPoint(item.x, item.y);
							var feature:Feature = new Feature(geoPoint, predefinedMarkerStyle, item);
							feature.id = item.id;
							feature.toolTip = item.name;
							feature.addEventListener(MouseEvent.CLICK, featureMouseClickHandler);
							feature.buttonMode = true;
							featuresLayer.addFeature(feature);
						}
					}
				}
			}
			
			private function showFeatureDetail(feature:Feature):void
			{
				var queryObjectEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_OBJECT_DETAIL);
				queryObjectEvent.data = feature;
				queryObjectEvent.dispatch();
			}
			
			private function featureMouseClickHandler(event:MouseEvent):void
			{
				var feature:Feature = event.currentTarget as Feature;
				var attribute:Object = feature.attributes;
				var requestParam:Object = attribute;
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_STATION_EVALUTION_INFO);
				queryEvent.data = requestParam;
				queryEvent.dispatch();
				
				showFeatureDetail(feature);
			}
			
			//清除
			public function clearSystemHandler(event:CairngormEvent):void
			{
				
			}
			
			//系统重新加载
			public function systemReloadHandler(event:CairngormEvent):void
			{
				
			}
			
			//查明默认缺省监测点，断面水功能区点
			private function queryDefaultStation():void
			{
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_DEFAULT_POINT);
				queryEvent.dispatch();
			}	
			
			protected function widgetRemoveHandler(event:BaseWidgetEvent):void
			{
				var featuresLayer:FeaturesLayerEx = FeatureLayerUtil.getFeatureLayerById(ConstVO.EVALUATION_FEATURE_LAYER, modelLocator.mapCtrl);
				featuresLayer.clear();
			}
			
			//初始化查询
			protected function widgetAddCompleteHandler(event:BaseWidgetEvent):void
			{
				queryDefaultStation();
				queryRiverList();
				//初始化评价类型列表
				decodeUI(searchTypeContainer, searchTypePanelHeight, searchTypeData);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup x="0" y="0" width="100%" gap="2"
			  paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
		<s:HGroup width="100%"
				  horizontalAlign="left" verticalAlign="middle">
			<s:Label text="水质评价条件设置：" width="100%" height="30" 
					 backgroundColor="#3385FF" fontSize="14" color="#FFFFFF"/>
		</s:HGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#ACAB96" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:VGroup id="searchRiverContainer" width="100%" maxHeight="{searchRiverPanelHeight}" paddingBottom="5" paddingTop="5">  
		</s:VGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#ACAB96" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:VGroup id="searchYearContainer" width="100%" maxHeight="{searchYearPanelHeight}" paddingBottom="5" paddingTop="5">
		</s:VGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#ACAB96" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:VGroup id="searchTypeContainer"  width="100%" paddingBottom="5" paddingTop="5">
		</s:VGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#ACAB96" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:VGroup id="periodContainer" width="100%" maxHeight="{searchPeriodPanelHeight}" gap="3"
				  horizontalAlign="center" verticalAlign="middle" paddingTop="5">
			<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Button width="60" height="30" buttonMode="true" label="查询" 
						  styleName="SubmitRegisterStyle"/>
				<s:Label id="queryInfoText" verticalAlign="middle" color="#FF0000" includeInLayout="false" visible="false"/>
			</s:HGroup>
			<s:List id="periodList" width="100%" height="100%" borderVisible="false"
					horizontalScrollPolicy="off"/>
		</s:VGroup>
	</s:VGroup>
</ns:WidgetBase>
