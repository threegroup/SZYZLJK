<?xml version="1.0" encoding="utf-8"?>
<ns:WidgetBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ns="library://ns.supermap.com/flex/wegis/common" 
			   xmlns:line="sm.wegis.szy.components.line.*"
			   width="100%" height="100%"
			   creationComplete="creationCompleteHandler(event)" >
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.utils.StringUtil;
			import com.supermap.wegis.common.components.scrollPanel.ButtonItem;
			import com.supermap.wegis.common.core.resourceManager.ResourceManagerEx;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			
			import sm.wegis.szy.events.ListCheckItemRendererEvent;
			import sm.wegis.szy.events.QueryEvent;
			import sm.wegis.szy.events.SystemEvent;
			import sm.wegis.szy.models.ApplicationModelLocator;
			import sm.wegis.szy.vo.MapQueryVO;
			
			import spark.components.DropDownList;
			import spark.events.IndexChangeEvent;
			private var modelLocator:ApplicationModelLocator = ApplicationModelLocator.getInstance();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				initEventListener();
				queryMainTypes();
			}
			
			public function initEventListener():void{
				CairngormEventDispatcher.getInstance().addEventListener(SystemEvent.SYSTEM_RELOAD
					, systemReloadHandler);
				CairngormEventDispatcher.getInstance().addEventListener(QueryEvent.QUERY_MAIN_TYPES_RESPONSE
					, queryMainTypesHandler);
				CairngormEventDispatcher.getInstance().addEventListener(QueryEvent.QUERY_TYPES_AND_DETAIL_LIST_RESPONSE
					, queryTypesAndDetailListHandler);
			}
			
			//用户或子系统发生变化，刷新数据
			private function systemReloadHandler(event:CairngormEvent):void
			{
				//此处添加模块UI及逻辑初始化功能
				this.resetUI();
				
				queryMainTypes();
			}
			
			//系统初始化或系统切换之后重置UI
			private function resetUI():void
			{
				if(this.conditionGroup != null && this.conditionGroup.numElements >0)
				{
					this.conditionGroup.removeAllElements();
				}
				
				this.ResultContentPanel.visible = false;
				this.resultList.dataProvider = null;
			}
			
			//请求mainType
			public function queryMainTypes():void
			{
				var queryMainTypes:QueryEvent = new QueryEvent(QueryEvent.QUERY_MAIN_TYPES);
				queryMainTypes.dispatch();
			}
			
			//查询分类和明细
			private function queryTypesAndDetailList():void
			{
				if (scrollButtonPanel.currentButtonItem == null && StringUtil.trim(searchInput.text).length == 0 ) {
					Alert.show("请选择查询类型或输入查询对象名称", "提示", Alert.OK, FlexGlobals.topLevelApplication as Sprite);
					return;
				}
				var selectItem:ButtonItem = scrollButtonPanel.currentButtonItem;
				var typeIds:Array = getTypeIds();
				var mapQueryVO:MapQueryVO = new MapQueryVO();
				mapQueryVO.mainType = selectItem.id;
				if (StringUtil.trim(searchInput.text).length != 0) {
					mapQueryVO.keyword = StringUtil.trim(searchInput.text);
				}
				
				if (typeIds.length > 0 ) {
					mapQueryVO.typeIds = typeIds.join(",");
				}
				
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_TYPES_AND_DETAIL_LIST);
				queryEvent.data = mapQueryVO;
				queryEvent.dispatch();
			}
			
			//获取下拉框选择的多个类型
			private function getTypeIds():Array
			{
				var typeIds:Array = [];
				for(var i:int = 0 ; i < conditionGroup.numElements ; i++)
				{
					var childElement:DropDownList = conditionGroup.getElementAt(i) as DropDownList;
					//如果选项大于0，需要返回选择的type值
					if (childElement.selectedIndex > 0 ) {
						typeIds.push(childElement.selectedItem.typeId);
					}
				}
				return typeIds;
			}
			
			private function queryMainTypesHandler(event:CairngormEvent):void
			{
				var data:Object = event.data;
				if (data.success == true) {
					if (data.attributes) {
						if (data.attributes.mainTypes != null && data.attributes.mainTypes.length > 0)
						{
							scrollButtonPanel.dataProvider = new ArrayCollection(data.attributes.mainTypes);
							scrollButtonPanel.selectedIndex = 0;//必须先设置数据源
							//默认显示第一分类
							queryTypesAndDetailList();
						}
					}
				}
			}
			
			private function queryTypesAndDetailListHandler(event:CairngormEvent):void
			{
				var data:Object = event.data;
				resultList.dataProvider = null;
				if (resultList.scrollRect) {
					resultList.scrollRect.y = 0;
				}
				if (data.success == true) 
				{
					if(!this.ResultContentPanel.visible)
						this.ResultContentPanel.visible = true;
					if (data.attributes) 
					{
						if (data.attributes.types != null && data.attributes.types.length > 0)
						{
							var dropDownList:DropDownList = createTypeDropDownControl(new ArrayCollection(data.attributes.types));
							conditionGroup.addElement(dropDownList);
						}
						if (data.attributes.targetList != null && data.attributes.targetList.length > 0) 
						{
							resultList.dataProvider = new ArrayCollection(data.attributes.targetList);
						}
					}
				}
				else
				{
					this.ResultContentPanel.visible = false;
					//此处面板做相应的初始化
				}
			}
			
			//创建新下拉框
			private function createTypeDropDownControl(dataProvider:ArrayCollection):DropDownList
			{
				var dropDownList:DropDownList = new DropDownList();
				dropDownList.requireSelection = true;
				dropDownList.percentWidth = 100;
				dropDownList.height = 30;
				dropDownList.addEventListener(IndexChangeEvent.CHANGE, selectChangeHandler);
				dropDownList.labelField = "typeName";
				dropDownList.dataProvider = dataProvider;
				dropDownList.styleName = "SystemSelectorStyle";
				return dropDownList;
			}
			
			private function selectChangeHandler(event:IndexChangeEvent):void
			{
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.HIDE_WATER_WATCH_WIDGET);
				queryEvent.dispatch();
				var currentDrop:DropDownList = event.currentTarget as DropDownList;
				//将要删除的下拉框，删除当前选择后面所有下拉框
				var removeDDs:Array = [];
				for(var i:int = 0 ; i < conditionGroup.numElements ; i++)
				{
					var childElement:DropDownList = conditionGroup.getElementAt(i) as DropDownList;
					if (currentDrop == childElement &&  i < conditionGroup.numElements - 1) {
						for (i = i+1; i < conditionGroup.numElements ; i++)
						{
							removeDDs.push(conditionGroup.getElementAt(i));
						}
						break;
					}
				}
				for each(var item:IVisualElement in removeDDs) {
					conditionGroup.removeElement(item);
				}
				if (currentDrop.selectedIndex != 0 ) {
					queryTypesAndDetailList();
				}
			}
			
			
			protected function resultList_creationCompleteHandler(event:FlexEvent):void
			{
				resultList.addEventListener(ListCheckItemRendererEvent.SELECT_CHANGED, selectChangedHandler);
			}
			
			private function selectChangedHandler(event:ListCheckItemRendererEvent):void
			{
				var data:Object = event.data;
				var queryEvent:QueryEvent = new QueryEvent(QueryEvent.QUERY_SINGLE_OBJECT_INFO);
				queryEvent.data = data;
				queryEvent.dispatch();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" gap="10" 
			  paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5">
		<s:HGroup width="100%" horizontalAlign="center">
			<ns:ScrollPanel id="scrollButtonPanel" 
							horizontalCenter="0"
							hGap="15"  
							itemHeight="80" itemWidth="80"
							contentBackgroundAlpha="0.8" alpha="0.8"
							labelField="name"
							rowCount="6" columnCount="4"
							type="button"
							buttonStyleName="ScrollPanelItemStyle"/>
		</s:HGroup>
		<line:HLine />
		<s:HGroup width="100%" height="30" gap="10" verticalAlign="middle">
			<s:TextInput id="searchInput"  height="100%" prompt="请输入关键字" width="100%"/> 
			<s:Button id="searchBt" height="100%" width="60" buttonMode="true" label="查询" 
					  styleName="SubmitRegisterStyle"  click="queryTypesAndDetailList()"/>
		</s:HGroup>
		<s:VGroup id="ResultContentPanel" width="100%" height="100%" gap="10" visible="false">
			<s:Panel title="水体类型" width="100%" maxHeight="200" minHeight="80">
				<s:Scroller width="100%" height="100%" 
							verticalScrollPolicy="auto" horizontalScrollPolicy="off">
					<s:VGroup id="conditionGroup" width="100%" 
							  paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5"/>
				</s:Scroller>
			</s:Panel>
			<s:Panel title="水体对象" width="100%" height="100%">
				<s:List id="resultList" width="100%" height="100%"  labelField="name"  
						creationComplete="resultList_creationCompleteHandler(event)"
						borderVisible="false" 
						itemRenderer="sm.wegis.szy.renders.MapQueryListItemRenderer"/>
			</s:Panel>
		</s:VGroup>
	</s:VGroup>
</ns:WidgetBase>
