<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="{width}" height="{height}"
		 creationComplete="init(event)">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.LabelStyle
		{
			color:#FFFFFF;
			textAlign:"center";
			verticalAlign:"middle"
		}
		
		.MenuStyle
		{
			color:#3c75bf;
			fontSize:12;
			borderColor:#3c75bf;
			dropShadowVisible:false;
			selectionColor:#f0f4f9;
			rollOverColor:#f0f4f9
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.supermap.wegis.common.components.events.DropDownButtonEvent;
			
			import mx.controls.Menu;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			
			private var _width:Number = 65;
			private var _height:Number = 25;
			
			private var _menuWidht:Number = 65;
			private var _menuHeight:Number = 20;
			
			private var _label:String;
			private var _labelStyle:String = "LabelStyle";
			
			/**获取或设置菜单显示字段*/
			public var menuLabelField:String="@label";
			/**获取或设置菜单图标字段*/
			public var menuIconField:String="@icon";
			/**获取或设置菜单图标处理函数*/
			public var menuIconFunction:Function=null;
			/**获取或设置菜单样式*/
			public var menuStyle:String = "MenuStyle";
			[Bindable]
			/**边框颜色*/
			public var borderColor:uint = 0x2674cd;
			[Bindable]
			/**填充起始颜色*/
			public var startFillColor:uint = 0x2d67b7;
			[Bindable]
			/**填充终止颜色*/
			public var endFillColor:uint = 0x6098d2;
			
			[Bindable]
			/**设置或获取按钮圆角半径*/
			public var cornerRadius:Number = 0;
			
			/**获取或设置下拉按钮图标*/
			[Bindable]
			[Embed (source="com/supermap/wegis/common/images/dropdownarrow.png")]
			public var icon:Class;
			
			//按钮内置菜单
			private var innerMenu:Menu = null;
			
			private var _rightButtonWidth:Number = 14;
			
			/**数据格式如xml文本(可以根据需要自定义文本内容)：<root>
			 <menuitem id="AllRegion" code="000000" label="全部" type="radio" toggled="true" groupName="g1"/>
			 <menuitem id="CurrentRegion" code="111111" label="当前" type="radio" toggled="false" groupName="g1"/>
			 </root>*/
			private var _dataSource:XML = <root>
											 <menuitem id="AllRegion" code="CODE-000000" label="全部" type="radio" toggled="true" groupName="g1"/>
											 <menuitem id="CurrentRegion" code="CODE-111111" label="当前区域" type="radio" toggled="false" groupName="g1"/>
										  </root>; 
			
			/**获取菜单项目高度*/
			public function get menuHeight():Number
			{
				return _menuHeight;
			}
			
			/**设置菜单项目高度*/
			public function set menuHeight(value:Number):void
			{
				_menuHeight = value;
			}
			
			/**获取菜单项目宽度*/
			public function get menuWidht():Number
			{
				return _menuWidht;
			}
			
			/**设置菜单项目宽度*/
			public function set menuWidht(value:Number):void
			{
				_menuWidht = value;
			}
			
			[Bindable]
			public function get dataSource():XML
			{
				return _dataSource;
			}
			
			public function set dataSource(value:XML):void
			{
				_dataSource = value;
			}
			
			[Bindable]
			/**获取文本样式*/
			public function get labelStyle():String
			{
				return _labelStyle;
			}
			
			/**设置文本样式*/
			public function set labelStyle(value:String):void
			{
				_labelStyle = value;
			}
			
			[Bindable]
			/**获取组件右侧按钮宽度*/
			public function get rightButtonWidth():Number
			{
				return _rightButtonWidth;
			}
			
			/**设置组件右侧按钮宽度*/
			public function set rightButtonWidth(value:Number):void
			{
				_rightButtonWidth = value;
			}
			
			[Bindable]
			/**获取按钮文本*/
			public function get label():String
			{
				return _label;
			}
			
			/**设置按钮文本*/
			public function set label(value:String):void
			{
				_label = value;
			}
			
			/**获取按钮高度*/
			[Bindable]
			override public function get height():Number
			{
				return _height;
			}
			
			/**设置按钮高度*/
			override public function set height(value:Number):void
			{
				_height = value;
			}
			
			/**获取按钮宽度*/
			[Bindable]
			override public function get width():Number
			{
				return _width;
			}
			
			/**设置按钮宽度*/
			override public function set width(value:Number):void
			{
				_width = value;
			}
			
			private function iconFun(item:Object):Class{  
				return this[item.@icon];  
			}
			
			/**创建并显示菜单*/
			public function createMenu(dataProvider:XML, itemWidth:Number=65,
															rowHeiget:Number=20,labelField:String="@label", 
																				iconField:String="@icon",iconFunction:Function=null):void  
			{  
				innerMenu = Menu.createMenu(this,dataProvider,false);  
				innerMenu.addEventListener(MenuEvent.ITEM_CLICK, itemClickHandler);
				innerMenu.width = itemWidth;  
				innerMenu.rowHeight = rowHeiget;  
				innerMenu.styleName = menuStyle;
				innerMenu.selectable = true;
				if(dataProvider.menuitem.hasOwnProperty(labelField))
					innerMenu.labelField = labelField; 
				if(dataProvider.menuitem.hasOwnProperty(iconField))
				{
					innerMenu.iconField = iconField;  
					innerMenu.iconFunction = iconFun;  
				}
			}  
			
			//显示下拉菜单
			private function showMenu():void
			{
				if(innerMenu != null)
				{
					var mx:Number = this.x;
					var my:Number = this.y;
					var mp:Point = this.parent.localToGlobal(new Point(mx, my));
					innerMenu.show(mp.x, mp.y + this.height);  
				}
			}
			
			private function itemClickHandler(event:MenuEvent):void
			{
				var menuEvent:DropDownButtonEvent = new DropDownButtonEvent(DropDownButtonEvent.MENU_CLICK,
					event.item, true);
				this.dispatchEvent(menuEvent);
			}
			
			protected function DropDownContainer_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				showMenu();
			}
			
			protected function LabelContainer_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var menuEvent:DropDownButtonEvent = new DropDownButtonEvent(DropDownButtonEvent.CLICK,
					event, true);
				this.dispatchEvent(menuEvent);
			}
			
			protected function init(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				createMenu(dataSource, this.menuWidht, this.menuHeight, 
					this.menuLabelField, this.menuIconField, this.menuIconFunction);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Rect width="100%" height="100%" 
			radiusX="{cornerRadius}" radiusY="{cornerRadius}">
		<s:stroke>
			<s:SolidColorStroke color="{borderColor}" weight="1"/>
		</s:stroke>
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="{startFillColor}"/>
				<s:GradientEntry color="{endFillColor}"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:HGroup width="100%" height="100%" gap="0" horizontalAlign="center" verticalAlign="middle">
		<s:Label width="{width - rightButtonWidth - 2}" buttonMode="true"
				 styleName="{labelStyle}" text="{label}" click="LabelContainer_clickHandler(event)"/>
		<s:Line height="96%">
			<s:stroke>
				<s:SolidColorStroke color="#174083" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:Line height="96%">
			<s:stroke>
				<s:SolidColorStroke color="#92b2db" weight="1"/>
			</s:stroke>
		</s:Line>
		<s:HGroup width="{rightButtonWidth}" height="100%"
				  buttonMode="true" click="DropDownContainer_clickHandler(event)"
				  horizontalAlign="center" verticalAlign="middle">
			<s:Image smooth="true" smoothingQuality="high" source="{icon}"/>
		</s:HGroup>
	</s:HGroup>
</s:Group>
