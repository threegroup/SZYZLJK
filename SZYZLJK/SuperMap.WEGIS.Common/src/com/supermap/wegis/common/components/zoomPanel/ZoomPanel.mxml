<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="25" height="25" 
		 creationComplete="initZoomPanel(event)">
	<fx:Script>
		<![CDATA[
			import com.supermap.wegis.common.components.events.ZoomPanelEvent;
			
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			
			private var _maxContainerWidth:Number=300;
			private var _maxContainerHeight:Number=200;
			private var _minContainerWidth:Number = 25;
			private var _minContainerHeight:Number=25;

			[Bindable]
			/**容器最小高度*/
			public function get minContainerHeight():Number
			{
				return _minContainerHeight;
			}

			/**容器最小高度*/
			public function set minContainerHeight(value:Number):void
			{
				_minContainerHeight = value;
			}

			[Bindable]
			/**容器最小宽度*/
			public function get minContainerWidth():Number
			{
				return _minContainerWidth;
			}

			/**容器最小宽度*/
			public function set minContainerWidth(value:Number):void
			{
				_minContainerWidth = value;
			}

			[Bindable]
			/**容器最大高度*/
			public function get maxContainerHeight():Number
			{
				return _maxContainerHeight;
			}

			/**容器最大高度*/
			public function set maxContainerHeight(value:Number):void
			{
				_maxContainerHeight = value;
			}

			[Bindable]
			/**容器最大宽度*/
			public function get maxContainerWidth():Number
			{
				return _maxContainerWidth;
			}

			/**容器最大宽度*/
			public function set maxContainerWidth(value:Number):void
			{
				_maxContainerWidth = value;
			}

			/**组件中添加元素*/
			public function addPartFunction(content:IVisualElement):void
			{
				legendInfo.addElement(content);
			}
			
			protected function topEffect_effectEndHandler(event:EffectEvent):void
			{
				// TODO Auto-generated method stub
				legendInfo.visible=true;
			}
			
			protected function bottomEffect_effectStartHandler(event:EffectEvent):void
			{
				// TODO Auto-generated method stub
				legendInfo.visible=false;
			}
			
			protected function bottomEffect_effectEndHandler(event:EffectEvent):void
			{
				// TODO Auto-generated method stub
				legend.visible=false;
			}
			
			protected function topEffect_effectStartHandler(event:EffectEvent):void
			{
				// TODO Auto-generated method stub
				legend.visible=true;
			}
			
			protected function initZoomPanel(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				FlexGlobals.topLevelApplication.addEventListener(ZoomPanelEvent.ZOOM_ARROW_CLICK, ArrowsClickHandler);
			}
			
			private function ArrowsClickHandler(event:Event):void
			{
				if(width==25)
				{
					topEffect.play();
				}
				else
				{
					bottomEffect.play();
				}
			}
			
			/**返回图例容器*/
			public function getContainer():BorderContainer
			{
				return this.legendInfo;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Resize id="topEffect" target="{this}" widthTo="{maxContainerWidth}" heightTo="{maxContainerHeight}" duration="200" 
				  effectStart="topEffect_effectStartHandler(event)"
				  effectEnd="topEffect_effectEndHandler(event)"/>
		
		<s:Resize id="bottomEffect" target="{this}" widthTo="{minContainerWidth}" heightTo="{minContainerHeight}" duration="200"
				  effectStart="bottomEffect_effectStartHandler(event)"
				  effectEnd="bottomEffect_effectEndHandler(event)"/>
	</fx:Declarations>
	<s:Group id="legend" width="100%" height="100%" minWidth="0" minHeight="0"
					   visible="false">
		<s:BorderContainer id="legendInfo" backgroundColor="#F1F2F1" borderColor="#B3B4B3"   cornerRadius="3" minWidth="0" minHeight="0"
						   left="3" bottom="3" right="3" top="3" visible="false" backgroundAlpha="0.75">		
		</s:BorderContainer>
	</s:Group>
</s:Group>
